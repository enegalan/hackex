@import 'tailwindcss';
@import './progress-bars.css';
@import './back-button.css';
@import './disconnect-button.css';
@import './modals.css';
@import './home/home.css';
@import './home/apps.css';
@import './home/levels.css';
@import './processes/processes.css';
@import './scan/scan.css';
@import './bank-account/bank-login.css';
@import './store/store.css';
@import './log/log.css';
@import './my-device/my-device.css';
@import './login/login.css';
@import './access-boot/access-boot.css';
@import './messages/messages.css';
@import './leaderboards/leaderboards.css';

@source '../../vendor/laravel/framework/src/Illuminate/Pagination/resources/views/*.blade.php';
@source '../../storage/framework/views/*.php';
@source '../**/*.blade.php';
@source '../**/*.js';

@theme {
    --font-sans: 'Instrument Sans', ui-sans-serif, system-ui, sans-serif, 'Apple Color Emoji', 'Segoe UI Emoji',
        'Segoe UI Symbol', 'Noto Color Emoji';
}

@font-face {
    font-family: 'neuropol';
    src: url('/fonts/neuropol.woff2') format('woff2');
    font-weight: normal;
    font-style: normal;
}

@font-face {
    font-family: 'dosis';
    src: url('/fonts/dosis.woff2') format('woff2');
    font-weight: normal;
    font-style: normal;
}

@font-face {
    font-family: 'main_normal';
    src: url('/fonts/united_sans_reg_medium.woff2') format('woff2');
    font-weight: normal;
    font-style: normal;
}

@font-face {
    font-family: 'main_bold';
    src: url('/fonts/united_sans_reg_heavy.woff2') format('woff2');
    font-weight: bolder;
    font-style: normal;
}

@font-face {
    font-family: 'main_light';
    src: url('/fonts/united_sans_reg_light.woff2') format('woff2');
    font-weight: lighter;
    font-style: normal;
}

body {
    background: var(--bodyBg);
    scroll-behavior: smooth;
    font-family: 'main_normal';
    scroll-behavior: smooth;
}

:root {
    --black: #000;
    --blackTransparency: #00000080;
    --grey: #2f2f2f5a;
    --grey2: #4c4c4c;
    --darkGrey: #252525;
    --darkGreyTransparency: #25252580;
    --mainDark: #222222c2;
    --secondaryDark: #333;
    --transition: 0.3s ease-in;
    --white: #fff;
    --white-2: #fffefe;
    --bodyBg: #383838;
    --red: #e72020;
    --primaryGreen: #a6e736;
    --primaryGreenHover: #77a625;
    --secondaryGreen: #94ff94;
    --scanColor: #6bb20fab;
    --scanColorSecondary: #6bb20f;
    --loginBg: #2323237b;
    --bankLoginBg: #084b8d;
    --bankColor: #1a5492;
    --bankLogo: #ff7507;
    --bitcoinColor: #fff96d;
    --homeApps1: #fe9a48;
    --homeApps2: #42e3ee;
    --homeApps3: #fbff61;
    --levels1: #2886bc;
    --levels2: #25d21b;
    --levels3: #b3db20;
    --levels4: #1d4962;
    --leaderboard: #484848;
    --checkbox: #60606224;
    --mainButton: #cecece;
    --mainButton2: #3d3d3d6e;
    --secondaryButton: #c2c2c2;
    --lightGrey: #ccc;
    --disconnect: #95ff94;
    --modal: #1e1e1ead;
    --modalText: #bebebe;
    --boxShadow: '5px 5px 20px var(--blackTransparency)';
    --wallpaperFrame: #303030;
    --glassBorder: rgba(255, 255, 255, 0.05);
    --glowRadius: 15px;
}

:root {
    
    /* vars */
    --glow-sens: 30;
    --card-bg: linear-gradient(8deg,var(--dark) 75%, color-mix(in hsl, var(--dark), white 2.5%) 75.5%);
    --blend: soft-light;
    --glow-blend: plus-lighter;
    --glow-color: 40deg 80% 80%;
    
}

input[type="search"], input[type="text"], input[type="password"], textarea {
    background-color: var(--white);
    border-radius: 5px;
    padding: 0.25rem;
    padding-left: 0.5rem;
    padding-right: 0.5rem;
    width: 100%;
    font-size: 20px;
    color: var(--black);
}

input[type="password"] {
    letter-spacing: 3px;
}

.button-wrapper {
    position: relative;
}

.button-wrapper .button {
    background-color: #ffffff1c;
    border: 1px solid var(--glassBorder);
    border-radius: 8px;
    padding: 10px 15px;
    color: var(--white);
    font-size: clamp(0.9rem, 1.5vw, 1.2rem);
    width: inherit;
    backdrop-filter: blur(5px);
    transition: var(--transition);
    box-shadow: inset 0 2px 5px rgba(0, 0, 0, 0.2),
        0 0 0 var(--glow-radius) rgba(0, 255, 170, 0);
}

.button-wrapper .button:hover {
    background-color: #ffffff23;
    transition: var(--transition);
}

.button-wrapper .button:active {
    background-color: #ffffff10;
    transition: var(--transition);
}

.button-wrapper .button:focus {
    outline: none;
    border-color: var(--primaryGreen);
    box-shadow: inset 0 2px 5px rgba(0, 0, 0, 0.2),
        0 0 0 4px rgba(0, 255, 170, 0.2);
}

.input-wrapper {
    position: relative;
    width: 100%;
}

.input-wrapper input, select {
    background-color: #ffffff0d;
    border: 1px solid var(--glassBorder);
    border-radius: 8px;
    padding: 10px 15px;
    color: var(--white);
    font-size: clamp(0.9rem, 1.5vw, 1.2rem);
    width: clamp(150px, 20vw, 300px);
    backdrop-filter: blur(5px);
    transition: all 0.3s ease;
    box-shadow: inset 0 2px 5px rgba(0, 0, 0, 0.2),
        0 0 0 var(--glow-radius) rgba(0, 255, 170, 0);
    width: 100%;
}

.input-wrapper input:focus, select:focus {
    outline: none;
    border-color: var(--primaryGreen);
    box-shadow: inset 0 2px 5px rgba(0, 0, 0, 0.2),
        0 0 0 4px rgba(0, 255, 170, 0.2);
}

.input-glow {
    position: absolute;
    top: 50%;
    left: 50%;
    transform: translate(-50%, -50%);
    width: inherit;
    height: 100%;
    background: radial-gradient(ellipse at center, var(--primaryGreen) 0%, transparent 70%);
    opacity: 0;
    filter: blur(10px);
    z-index: -1;
    transition: opacity 0.3s ease;
}

.cbx-glow {
    position: absolute;
    top: 50%;
    left: 50%;
    transform: translate(-50%, -50%);
    width: 50px;
    height: 30px;
    background: radial-gradient(ellipse at center, #255cd2de 0%, transparent 70%);
    opacity: 0;
    filter: blur(10px);
    z-index: 0;
    transition: opacity 0.3s ease;
}

.input-wrapper input:focus + .input-glow,
.button-wrapper .button:hover + .input-glow {
    opacity: 0.2;
}

hr {
    border: .1px solid #ffffff85;
    width: 100%;
}

textarea:focus-visible {
    outline: none;
}

.text-area-wrapper {
    flex: 1;
    position: relative;
    display: flex;
    flex-direction: column;
}

.text-area-wrapper textarea {
    width: 100%;
    height: 100%;
    padding: 1.5rem;
    background-color: rgba(0, 255, 170, 0.05); 
    color: var(--white);
    border: 1px solid var(--glassBorder);
    border-radius: 15px;
    line-height: 1.5;
    resize: none;
    backdrop-filter: blur(5px);
    transition: all 0.3s ease;
    box-shadow: 
        inset 0 2px 10px rgba(0, 0, 0, 0.3),
        0 0 0 var(--glowRadius) rgba(0, 255, 170, 0);
}

.text-area-wrapper textarea:focus {
    outline: none;
    border-color: var(--primaryGreen);
    box-shadow: 
        inset 0 2px 10px rgba(0, 0, 0, 0.3),
        0 0 0 4px rgba(0, 255, 170, 0.2);
}

.textarea-glow {
    position: absolute;
    top: 50%;
    left: 50%;
    transform: translate(-50%, -50%);
    width: 100%;
    height: 100%;
    background: radial-gradient(ellipse at center, var(--primaryGreen) 0%, transparent 70%);
    opacity: 0;
    filter: blur(20px);
    z-index: 0;
    transition: opacity 0.3s ease;
    pointer-events: none;
}

.text-area-wrapper textarea:focus + .textarea-glow {
    opacity: 0.1;
}

.cursor-pointer {
    cursor: pointer;
}

.input-error-message {
    color: var(--red);
    font-size: 0.9em;
    margin-top: 5px;
}

.negative {
    color: var(--red);
}

.positive {
    color: var(--primaryGreen);
}

.rotate-180 {
    transform: rotate(180deg);
}

.scrollbar-none {
    scrollbar-width: none; /* Firefox */
    -ms-overflow-style: none; /* IE 10+ */
}

.scrollbar-none::-webkit-scrollbar {
    display: none; /* Chrome, Safari, Edge */
}

* {
    cursor: none !important;
}

*::-webkit-scrollbar {
    width: 8px; /* width of the entire scrollbar */
}

*::-webkit-scrollbar-track {
    background: transparent; /* color of the tracking area */
}

*::-webkit-scrollbar-thumb {
    background-color: #0000007d; /* color of the scroll thumb */
    border-radius: 20px; /* roundness of the scroll thumb */
}

.dark-gradient-header {
    z-index: 3;
    background: linear-gradient(0deg, #151515 30%, var(--grey2) 100%);
    justify-content: space-between;
    width: 100%;
    padding: 1rem;
    display: flex;
    position: fixed;
}

.dark-gradient-header h3 {
    font-family: 'main_bold';
    font-style: italic;
    font-size: 18px;
}

.custom-cursor {
    position: fixed;
    width: 20px;
    height: 20px;
    border: 2px solid var(--primaryGreen);
    border-radius: 50%;
    transform: translate(-50%, -50%);
    pointer-events: none;
    z-index: 9999;
    mix-blend-mode: exclusion;
}

.cursor-glitch {
    position: fixed;
    width: 20px;
    height: 20px;
    background: rgba(0, 255, 170, 0.2);
    border-radius: 50%;
    transform: translate(-50%, -50%);
    pointer-events: none;
    z-index: 9998;
    filter: blur(5px);
    opacity: 0.7;
    mix-blend-mode: screen;
}

.click-effect {
    position: fixed;
    width: 50px;
    height: 50px;
    border: 3px solid var(--secondaryGreen);
    border-radius: 50%;
    transform: translate(-50%, -50%) scale(0);
    pointer-events: none;
    z-index: 9997;
    animation: clickExpand 0.6s forwards;
}

@keyframes clickExpand {
    0% {
        transform: translate(-50%, -50%) scale(0);
        opacity: 1;
    }
    100% {
        transform: translate(-50%, -50%) scale(1.5);
        opacity: 0;
    }
}

.card {
    --pads: 40px;
    --color-sens: calc(var(--glow-sens) + 20);
    position: relative;
    width: clamp(320px, calc(100svw - calc(var(--pads) * 2)), 600px);
    height: calc(100svh - calc(var(--pads) * 2));
    max-height: 600px;
    border-radius: 1.768em;
    isolation: isolate;
    transform: translate3d(0, 0, 0.01px);
    display: grid;
    border: 1px solid rgb(255 255 255 / 25%);
    background: var(--card-bg);
    background-repeat: no-repeat;
    backdrop-filter: blur(var(--glowRadius));
}
.card.hoverable::before,
.card.hoverable::after,
.card.hoverable > .glow {
    content: "";
    position: absolute;
    inset: 0;
    border-radius: inherit;
    transition: opacity 0.25s ease-out;
    z-index: -1;
}
.card.hoverable:not(:hover):not(.animating)::before,
.card.hoverable:not(:hover):not(.animating)::after,
.card.hoverable:not(:hover):not(.animating) > .glow {
    opacity: 0;
    transition: opacity 0.75s ease-in-out;
}
.card.hoverable::before {
    border: 1px solid transparent;
    background:
        linear-gradient(var(--card-bg) 0 100%) padding-box,
        linear-gradient(rgb(255 255 255 / 0%) 0% 100%) border-box,
        radial-gradient(at 80% 55%, var(--primaryGreenHover) 0px, transparent 50%) border-box,
        radial-gradient(at 69% 34%, var(--white-2) 0px, transparent 50%) border-box,
        radial-gradient(at 8% 6%, var(--secondaryGreen) 0px, transparent 50%) border-box,
        radial-gradient(at 41% 38%, hsla(192,100%,64%,1) 0px, transparent 50%) border-box,
        radial-gradient(at 86% 85%, var(--scanColor) 0px, transparent 50%) border-box,
        radial-gradient(at 82% 18%, var(--mainButton) 0px, transparent 50%) border-box,
        radial-gradient(at 51% 4%, var(--lightGrey) 0px, transparent 50%) border-box,
        linear-gradient(var(--primaryGreen) 0 100%) border-box;
    opacity: calc((var(--pointer-d) - var(--color-sens)) / (100 - var(--color-sens)));
    mask-image: conic-gradient(
        from var(--pointer-°) at center,
        black 25%, transparent 40%, transparent 60%, black 75%
    );
}
.card.hoverable::after {
    border: 1px solid transparent;
    background:
        radial-gradient(at 80% 55%, var(--primaryGreenHover) 0px, transparent 50%) padding-box,
        radial-gradient(at 69% 34%, var(--white-2) 0px, transparent 50%) padding-box,
        radial-gradient(at 8% 6%, var(--secondaryGreen) 0px, transparent 50%) padding-box,
        radial-gradient(at 41% 38%, hsla(192,100%,64%,1) 0px, transparent 50%) padding-box,
        radial-gradient(at 86% 85%, var(--scanColor) 0px, transparent 50%) padding-box,
        radial-gradient(at 82% 18%, var(--mainButton) 0px, transparent 50%) padding-box,
        radial-gradient(at 51% 4%, var(--lightGrey) 0px, transparent 50%) padding-box,
        linear-gradient(var(--primaryGreen) 0 100%) padding-box;
    mask-image: linear-gradient(to bottom,#000,#000),radial-gradient(ellipse at 55% 55%,black 40%,transparent 85%),radial-gradient(ellipse at 66% 66%,black 5%,transparent 40%),radial-gradient(ellipse at 33% 33%,black 5%,transparent 40%),radial-gradient(ellipse at 80% 33%,black 5%,transparent 60%),radial-gradient(ellipse at 33% 74%,black 5%,transparent 40%),conic-gradient(from var(--pointer-°)at center,transparent 5%,black 15%,black 85%,transparent 95%);
    mask-composite: subtract, add, add, add, add, add;
    opacity: calc((var(--pointer-d) - var(--color-sens)) / (100 - var(--color-sens)));
    mix-blend-mode: var(--blend);
}
.card.hoverable > .glow {
    --outset: var(--pads);
    inset: calc(var(--outset) * -1);
    pointer-events: none;
    z-index: 1;
    mask-image: conic-gradient(
        from var(--pointer-°) at center,
        black 2.5%, transparent 10%, transparent 90%, black 97.5%
    );
    opacity: calc((var(--pointer-d) - var(--glow-sens)) / (100 - var(--glow-sens)));
    mix-blend-mode: var(--glow-blend);
}
.card.hoverable > .glow::before {
    content: "";
    position: absolute;
    inset: var(--outset);
    border-radius: inherit;
    box-shadow:
        inset 0 0 0 1px hsl(var(--glow-color) / 100%),
        inset 0 0 2px 2px hsl(var(--glow-color) / 90%),
        inset 0 0 5px 1px hsl(var(--glow-color) / 75%),
        inset 0 0 8px 1px hsl(var(--glow-color) / 66%),
        inset 0 0 15px 0 hsl(var(--glow-color) / 50%),
        inset 0 0 25px 2px hsl(var(--glow-color) / 30%),
        inset 0 0 50px 2px hsl(var(--glow-color) / 10%),
        0 0 2px 2px hsl(var(--glow-color) / 90%),
        0 0 5px 1px hsl(var(--glow-color) / 75%),
        0 0 8px 1px hsl(var(--glow-color) / 66%),
        0 0 15px 0 hsl(var(--glow-color) / 50%),
        0 0 25px 2px hsl(var(--glow-color) / 30%),
        0 0 50px 2px hsl(var(--glow-color) / 10%);
}
.card {
    box-shadow:
        rgba(0, 0, 0, 0.1) 0px 1px 2px,
        rgba(0, 0, 0, 0.1) 0px 2px 4px,
        rgba(0, 0, 0, 0.1) 0px 4px 8px,
        rgba(0, 0, 0, 0.1) 0px 8px 16px,
        rgba(0, 0, 0, 0.1) 0px 16px 32px,
        rgba(0, 0, 0, 0.1) 0px 32px 64px;
}
@keyframes fadeContent {
    to {
        opacity: 1;
    }
}
